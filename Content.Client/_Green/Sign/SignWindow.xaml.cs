using Content.Client.UserInterface.Controls;
using Content.Shared.Paper;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Green.Sign;

[GenerateTypedNameReferences]
public sealed partial class SignWindow : FancyWindow
{
    public Action<string>? OnSigned;

    private int _maxLength;

    public SignWindow()
    {
        RobustXamlLoader.Load(this);

        CloseButton.OnPressed += _ => Close();

        SignButton.OnPressed += _ => Sign();

        SignEdit.OnTextChanged += e => SignButton.Disabled = e.Text.Length < 1 || e.Text.Length > _maxLength;
    }

    public void Populate(PaperComponent.SignBoundUserInterfaceState state)
    {
        SignEdit.Text = state.Name;
        _maxLength = state.MaxLength;
    }

    private void Sign()
    {
        OnSigned?.Invoke(SignEdit.Text);
        Close();
    }
}
